plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion Config.compile_sdk
    buildToolsVersion Config.build_tools

    defaultConfig {
        applicationId Config.application_id
        minSdkVersion Config.min_sdk
        targetSdkVersion Config.target_sdk
        versionCode Releases.version_code
        versionName Releases.version_name
        multiDexEnabled true
        def baseUrl = Releases.base_url
        buildConfigField("String", "BASE_URL", "\"$baseUrl\"")
        testInstrumentationRunner Tests.runner
    }

    buildTypes {
        debug {
            versionNameSuffix "-debug"
        }
        staging {
            debuggable true
            signingConfig signingConfigs.debug
            versionNameSuffix "-staging"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility Config.java_version
        targetCompatibility Config.java_version
    }

    kapt {
        arguments {
            arg("room.incremental", "true")
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }
    }

    kotlinOptions.freeCompilerArgs += [
            "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
            "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi",
            "-Xuse-experimental=kotlin.time.ExperimentalTime"]

    packagingOptions {
        exclude("META-INF/*.kotlin_module")
    }

    kotlinOptions {
        jvmTarget = KotlinOptions.jvm_target
    }
}

dependencies {
    //Modules
    implementation project(Modules.domain)
    implementation project(Modules.data)

    //kotlin and coroutines
    implementation Kotlin.core
    implementation Kotlin.stdlib
    implementation Kotlin.reflect
    implementation Kotlin.coroutines_core
    implementation Kotlin.coroutines_android

    //Dagger
    implementation Dagger.dagger
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    kapt Dagger.dagger_compiler

    //Tools
    implementation Tools.multidex
    implementation Tools.constraint_layout
    implementation Tools.recycler_view
    implementation Tools.grid_layout
    implementation Tools.androidx_annotation

    //Design
    implementation Design.appcompat
    implementation Design.material

    //omega base
    implementation(Omega.base_core) {
        transitive = false
    }
    implementation Omega.base_annotation
    kapt Omega.base_processor

    //omega moxy
    implementation Omega.moxy
    implementation Omega.moxy_androidx
    implementation Omega.moxy_ktx
    kapt Omega.moxy_compiler

    //omega feathers
    implementation Omega.intent_builder_core
    implementation Omega.launchers
    implementation Omega.views
    implementation Omega.extensions
    implementation Omega.layouts
    implementation Omega.types
    implementation Omega.glide
    implementation Omega.center_icon_btn
    implementation Omega.bind
    implementation Omega.clicks
    implementation Omega.adapters
    implementation Omega.recycler_view

    //omega lint
    implementation Omega.lint

    //moshi
    implementation Moshi.moshi_kotlin
    kapt Moshi.moshi_codegen

    //retrofit
    implementation Retrofit.retrofit
    implementation Retrofit.retrofit_moshi_converter
    implementation Retrofit.okhttp3_logging_interceptor

    //room database
    implementation Room.room_runtime
    implementation Room.room_ktx
    kapt Room.room_compiler

    //graphView lib
    implementation MPChart.chart

    //test
    testImplementation TestImpl.junit
    androidTestImplementation TestImpl.androidx_junit
    androidTestImplementation TestImpl.espresso
}